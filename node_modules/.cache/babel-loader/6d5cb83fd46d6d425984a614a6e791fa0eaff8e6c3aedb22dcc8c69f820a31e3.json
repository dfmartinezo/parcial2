{"ast":null,"code":"var _jsxFileName = \"/Users/danielmartinez/Documents/GitHub/parcial2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport localeEsMessages from \"./locales/es\";\nimport localeEnMessages from \"./locales/en\";\nimport { IntlProvider } from 'react-intl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet locale = \"en-US\";\nif (navigator.language.includes(\"es\")) {\n  locale = \"es-ES\";\n}\nif (locale === \"en-US\") ReactDOM.render( /*#__PURE__*/_jsxDEV(IntlProvider, {\n  locale: locale,\n  messages: localeEnMessages,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 9\n}, this), document.getElementById(\"root\"));else ReactDOM.render( /*#__PURE__*/_jsxDEV(IntlProvider, {\n  locale: locale,\n  messages: localeEsMessages,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 9\n}, this), document.getElementById(\"root\"));\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","localeEsMessages","localeEnMessages","IntlProvider","locale","navigator","language","includes","render","document","getElementById"],"sources":["/Users/danielmartinez/Documents/GitHub/parcial2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport localeEsMessages from \"./locales/es\";\nimport localeEnMessages from \"./locales/en\";\nimport {IntlProvider} from 'react-intl';\n\n\nlet locale = \"en-US\";\nif (navigator.language.includes(\"es\")) {\n  locale = \"es-ES\";\n\n}\nif (locale ===\"en-US\")\n    ReactDOM.render(\n        <IntlProvider locale={locale} messages={localeEnMessages} >\n        <App/>\n        </IntlProvider>, document.getElementById(\"root\")\n    );\nelse\n    ReactDOM.render(\n        <IntlProvider locale={locale} messages={localeEsMessages} >\n        <App/>\n        </IntlProvider>, document.getElementById(\"root\")\n    );\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,gBAAgB,MAAM,cAAc;AAC3C,OAAOC,gBAAgB,MAAM,cAAc;AAC3C,SAAQC,YAAY,QAAO,YAAY;AAAC;AAGxC,IAAIC,MAAM,GAAG,OAAO;AACpB,IAAIC,SAAS,CAACC,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;EACrCH,MAAM,GAAG,OAAO;AAElB;AACA,IAAIA,MAAM,KAAI,OAAO,EACjBN,QAAQ,CAACU,MAAM,eACX,QAAC,YAAY;EAAC,MAAM,EAAEJ,MAAO;EAAC,QAAQ,EAAEF,gBAAiB;EAAA,uBACzD,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAE;EAAA;EAAA;EAAA;AAAA,QACS,EAAEO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACnD,CAAC,KAEFZ,QAAQ,CAACU,MAAM,eACX,QAAC,YAAY;EAAC,MAAM,EAAEJ,MAAO;EAAC,QAAQ,EAAEH,gBAAiB;EAAA,uBACzD,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAE;EAAA;EAAA;EAAA;AAAA,QACS,EAAEQ,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACnD;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAV,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}